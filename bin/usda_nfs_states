#! /usr/bin/env ruby

require 'cf/scrubber/usda/script'

class PrintStates < Cf::Scrubber::Usda::Script::States
  class Parser < Cf::Scrubber::Script::Parser
    FORMATS = [ :full, :short ]

    def initialize()
      rv = super()
      p = self.parser

      p.banner = "Usage: usda_nfs_states [options]\n\nLists states with a national forest or grassland"

      p.on_head("-i", "--with-index", "If present, emit the state indeces as well as names") do |n|
        self.options[:show_index] = true
      end

      p.on_head("-FFORMAT", "--format=FORMAT", "The output format to use: full or short (two-letter code).") do |f|
        f = f.to_sym
        self.options[:format] = f if FORMATS.include?(f)
      end

      self.options.merge!({ show_index: false, format: :full })

      rv
    end
  end

  def initialize()
    super(PrintStates::Parser.new)
  end

  def list_states()
    self.exec do |nfs, s, idx|
      if self.parser.options[:show_index]
        if self.parser.options[:format] == :short
          self.output.printf("%s: %d\n", nfs.state_code(s), s[s])
        else
          self.output.printf("%-18s: %d\n", s, idx)
        end
      else
        s = nfs.state_code(s) if self.parser.options[:format] == :short
        self.output.print("#{s}\n")
      end
    end
  end
end

script = PrintStates.new()
script.parser.parse(ARGV)
script.list_states

