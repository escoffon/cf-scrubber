#! /usr/bin/env ruby

require 'cf/scrubber/usda/script'

class PrintForests < Cf::Scrubber::Usda::Script::Forests
  class Parser < Cf::Scrubber::Usda::Script::Forests::Parser
    FORMATS = [ :full, :short ]

    def initialize()
      rv = super()

      self.options.merge!({ show_index: false, format: :full })

      p = self.parser

      p.banner = "Usage: usda_nfs_forests [options]\n\nLists national forests or grasslands for one or more states"

      p.on_head("-FFORMAT", "--format=FORMAT", "The output format to use for the state name: full or short (two-letter code).") do |f|
        f = f.to_sym
        self.options[:format] = f if FORMATS.include?(f)
      end
      
      p.on_head("-i", "--with-index", "If present, emit the state indeces as well as names") do |n|
        self.options[:show_index] = true
      end
      
      rv
    end
  end

  def initialize()
    super(PrintForests::Parser.new)
  end

  def exec()
    cur_state = ''

    self.process do |nfs, s, f, idx|
      if cur_state != s
        if self.parser.options[:format] == :short
          printf("%s\n", nfs.state_code(s))
        else
          printf("%s\n", s)
        end

        cur_state = s
      end

      if self.parser.options[:show_index]
        printf("  %-42s: %d\n", f, idx)
      else
        print("  #{f}\n")
      end
    end
  end
end

script = PrintForests.new()
script.parser.parse(ARGV)
script.exec

